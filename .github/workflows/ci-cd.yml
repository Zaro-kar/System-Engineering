name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Assign AcrPush role
        run: |
          az role assignment create --assignee ${{ secrets.AZURE_CLIENT_ID }} --scope /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP }}/providers/Microsoft.ContainerRegistry/registries/${{ secrets.ACR_NAME }} --role AcrPush

      - name: Build and Push Frontend Image
        run: |
          az acr build --registry ${{ secrets.ACR_NAME }} --image cc_webapp:latest ./cc_webapp

      - name: Build and Push Backend Image
        run: |
          az acr build --registry ${{ secrets.ACR_NAME }} --image cc_backend:latest ./cc_backend

      - name: Set up AKS context
        run: |
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.CLUSTER_NAME }} --overwrite-existing
          kubectl config view

      - name: Update Backend Deployment
        run: |
          kubectl set image deployment/cc-backend-deployment cc-backend=${{ secrets.ACR_NAME }}.azurecr.io/cc_backend:latest -n cc-namespace

      - name: Update Frontend Deployment
        run: |
          kubectl set image deployment/cc-webapp-deployment cc-webapp=${{ secrets.ACR_NAME }}.azurecr.io/cc_webapp:latest -n cc-namespace