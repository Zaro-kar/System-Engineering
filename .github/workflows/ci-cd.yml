name: CI/CD Pipeline

on:
  push:
    branches:
      - develop  # Auslöser bei jedem Push in den "main"-Branch

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Code aus dem Repository auschecken
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Logge dich bei Azure ein
    - name: Login to Azure
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        auth-type: federated

    # 3. Terraform ausführen
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.5

    - name: Terraform Init
      run: terraform init
      working-directory: terraform

    - name: Terraform Plan
      run: terraform plan
      working-directory: terraform

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: terraform

    # 4. Docker-Image bauen und in die ACR pushen
    - name: Login to ACR
      run: |
        az acr login --name ${{ secrets.ACR_NAME }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/webapp:latest ./webapp

    - name: Push Docker image to ACR
      run: |
        docker push ${{ secrets.ACR_NAME }}.azurecr.io/webapp:latest

    # 5. Kubernetes-Deployment aktualisieren
    - name: Apply Kubernetes deployment
      run: |
        kubectl apply -f webapp/k8s/deployment.yaml
