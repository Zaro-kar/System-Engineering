name: Deploy Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Login to ACR
        run: |
          echo ${{ secrets.AZURE_CLIENT_SECRET }} | docker login ${{ secrets.ACR_NAME }}.azurecr.io -u ${{ secrets.AZURE_CLIENT_ID }} --password-stdin

      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./cc_webapp
          push: true
          tags: ${{ secrets.ACR_NAME }}.azurecr.io/cc_webapp:latest

      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./cc_backend
          push: true
          tags: ${{ secrets.ACR_NAME }}.azurecr.io/cc_backend:latest

      - name: Set up AKS context
        run: |
          az aks get-credentials --resource-group ${{ secrets.RESOURCE_GROUP }} --name ${{ secrets.CLUSTER_NAME }} --overwrite-existing
          kubectl config view

      - name: Deploy Kubernetes Manifests
        run: |
          kubectl apply -f k8s/cc-webapp-deployment.yaml
          kubectl apply -f k8s/cc-backend-deployment.yaml
          kubectl apply -f k8s/cc-webapp-service.yaml
          kubectl apply -f k8s/cc-backend-service.yaml
          kubectl apply -f k8s/ingress-backend.yaml
          kubectl apply -f k8s/ingress-frontend.yaml
          kubectl apply -f k8s/ingress-class.yaml
          kubectl rollout restart deployment cc-webapp-deployment
          kubectl rollout restart deployment cc-backend-deployment
          kubectl rollout restart deployment ingress-nginx-controller -n ingress-nginx